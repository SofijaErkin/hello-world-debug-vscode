// 
// 
// 
// c_cpp_properties.json allows you to change settings such as the path to the
// compiler, include paths,
// You only need to modify the Include path setting if your program includes 
// header files that are not in your workspace or the standard library path
{
    "configurations": [
        {
            "name": "Mac",
            "includePath": [
                "${workspaceFolder}/**",
                "/Library/Developer/CommandLineTools/usr/include",
                "/Library/Developer/CommandLineTools/usr/lib/clang/9.0.0/include",
                "/usr/local/include",
                "/Library/Developer/CommandLineTools/usr/include/c++/v1",
                "/usr/include"
            ],
            "defines": [],
            "macFrameworkPath": [
                "/System/Library/Frameworks",
                "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks",
                "/Library/Frameworks"
            ],
            // This item can be generated automatically.
            // On the C/C++ Configuration screen, scroll down and expand 
            // Advanced Settings and ensure that Mac framework path points
            // to the system header files.
            // 
            "compilerPath": "/usr/bin/clang",
            // compilerPath is an important configuration setting. 
            // The extension uses it to infer the path to the C++ standard 
            // library header files.
            // When the extension knows where to find those files, 
            // it can provide useful features like smart completions and Go to 
            // Definition navigation.
            // The C/C++ extension attempts to populate compilerPath with the 
            // default compiler location based on what it finds on your system. 
            // The compilerPath search order is:
            // 
            // Your PATH for the names of known compilers. The order the 
            // compilers appear in the list depends on your PATH.
            // Then hard-coded Xcode paths are searched, such as 
            // /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/
            //
            "cStandard": "c11",
            "cppStandard": "c++11",
            // 
            // "intelliSenseMode": "macos-clang-x64", default.
            "intelliSenseMode": "macos-clang-x64"
            // "intelliSenseMode":"${default}"
        }
    ],
    "version": 4
}
//
// 