{
    "files.defaultLanguage": "c++",
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    // "editor.suggest.snippetsPreventQuickSuggestions":
    // Enter a semicolon (recognized at the end of a C/C++ statement) and 
    // automatically format to the current line of code.
    "editor.acceptSuggestionOnEnter": "on",
    // "editor.acceptSuggestionOnEnter":
    // "on" == Carriage return automatic completion;
    // "of" == tab auto-completion;
    // "top" == (Optional) Snippets are displayed at the top of the completion 
    // list, The default is inline.
    "code-runner.runInTerminal": true,
    // "code-runner.runInTerminal":
    // If set to false, it will be output in the "output column"; 
    // but it cannot be input in the "output column".
    "code-runner.executorMap": {
        // "javascript": "node",
        // "ruby": "ruby",
        // "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        // "go": "go run",
        // "r": "Rscript",
        //"python": "python -u",
        // "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt -std=c11 && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt -std=c++11 && $dir$fileNameWithoutExt"
    },
    // "code-runner.executorMap": 
    // "javascript": "node",
    // "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
    // "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    // "php": "php",
    // "python": "python -u",
    // "perl": "perl",
    // "perl6": "perl6",
    // "ruby": "ruby",
    // "ruby": "ruby",
    // "go": "go run",
    // "lua": "lua",
    // "groovy": "groovy",
    //  "powershell": "powershell -ExecutionPolicy ByPass -File",
    //  "bat": "cmd /c",
    //   "shellscript": "bash",
    //  "fsharp": "fsi",
    //  "csharp": "scriptcs",
    //  "vbscript": "cscript //Nologo",
    //  "typescript": "ts-node",
    //  "coffeescript": "coffee",
    //  "scala": "scala",
    //  "swift": "swift",
    //  "julia": "julia",
    //  "crystal": "crystal",
    //   "ocaml": "ocaml",
    //  "r": "Rscript",
    //  "applescript": "osascript",
    //  "clojure": "lein exec",
    //  "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
    //  "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
    //  "racket": "racket",
    //  "scheme": "csi -script",
    //  "ahk": "autohotkey",
    //  "autoit": "autoit3",
    //  "dart": "dart",
    //  "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
    //  "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
    //  "haskell": "runhaskell",
    //  "nim": "nim compile --verbosity:0 --hints:off --run",
    //  "lisp": "sbcl --script",
    //  "kit": "kitc --run",
    //  "v": "v run",
    //  "sass": "sass --style expanded",
    //  "scss": "scss --style expanded",
    //  "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
    //  "FortranFreeForm": 
    // "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    //  "fortran-modern": 
    // "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    //   "fortran_fixed-form": 
    // "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    //  "fortran": 
    // "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
    "code-runner.saveFileBeforeRun": true,
    // "code-runner.saveFileBeforeRun":
    // false, run before not saving;
    // true, run before saving.
    "code-runner.preserveFocus": false,
    // "code-runner.preserveFocus":
    // true,;
    // false, The cursor will be gathered on the terminal after running code, 
    // Need to enter data frequently.
    "code-runner.clearPreviousOutput": false,
    // "code-runner.clearPreviousOutput":
    // 
    // false, Clear the terminal belonging to the code runner before each 
    // running code, default;
    "code-runner.ignoreSelection": true,
    // "code-runner.ignoreSelection":
    // 
    // false,after the mouse selects a piece of code, it can be executed 
    // separately, C language is a compiler language, not used.
    "C_Cpp.clang_format_sortIncludes": true,
    //
    "editor.formatOnType": true,
    // "editor.formatOnType":
    // true, Formatting adjusted to the order of include (in alphabetical 
    // order)
    "C_Cpp.default.cppStandard": "c++11",
}